buildscript {
    ext {
        springBootVersion = '2.0.0.M4'
        junitPlatformVersion = '1.0.0'
        junitJupiterVersion = '5.0.0'
    }
    repositories {
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.junit.platform:junit-platform-gradle-plugin:${junitPlatformVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compileOnly('org.projectlombok:lombok')

    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')

    // aop
    compile('org.springframework.boot:spring-boot-starter-aop')

    // data access
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    runtime("com.h2database:h2")

    // web ui
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    // JUnit 5
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")

    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    // MVC testing
    testCompile("net.sourceforge.htmlunit:htmlunit")
    testCompile('org.springframework.boot:spring-boot-starter-test')

}